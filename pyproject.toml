[tool.poetry]
name = "mithrandir"
version = "0.1.0"
description = ""
authors = ["vsedov <viv.sedov@hotmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
discord-py = "^2.1.0"
flask = "^2.2.2"
python-dotenv = "^0.21.1"
openai = "^0.26.4"
bs4 = "^0.0.1"
icecream = "^2.1.3"
lxml = "^4.9.2"
pure-eval = "^0.2.2"
attrs = "^22.2.0"
rich = "^13.3.1"


[tool.poetry.group.dev.dependencies]
isort = "^5.12.0"
ruff = "^0.0.241"
black = "^23.1.0"
taskipy = "^1.10.3"
pdoc = "^12.3.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.taskipy.tasks]
start = "python -m mithrandir"
build = "poetry build"
report = "coverage report"
doc = "interrogate -c pyproject.toml"
isort = "isort ."
freeze = "poetry export -f requirements.txt > requirements.txt --without-hashes"


[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = true
ignore-semiprivate = false
ignore-private = true
ignore-property-decorators = true
ignore-module = true
fail-under = 100
exclude = ["setup.py", "docs", "build",  "_version.py", "versioneer.py"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*", "^fit$", "^transform$", "^setup"]
verbose = 1
quiet = false
whitelist-regex = []
color = true

[tool.vulture]
exclude = ["cogs/"]
ignore_decorators = ["@app.route", "@require_*", "@client.*"]
make_whitelist = true
min_confidence = 75
sort_by_size = true


[tool.coverage.run]
parallel = true
branch = true
source_pkgs = ["neorg"]
source = ["tests"]
omit = ["**/__main__.py"]

[tool.coverage.report]
show_missing = true
fail_under = 70
precision = 2
exclude_lines = ["pragma: no cover", "pass"]

[tool.isort]
multi_line_output = 6
order_by_type = false
case_sensitive = true
combine_as_imports = true
line_length = 120
atomic = true
